#!/bin/bash
# Quick Reference Card - Branch Creation Safety Scripts
# Print or save this file for quick access

cat << 'EOF'
╔════════════════════════════════════════════════════════════════════════════╗
║                     QUICK REFERENCE CARD                                  ║
║              Branch Creation Safety Scripts - Quick Start                  ║
╚════════════════════════════════════════════════════════════════════════════╝

📍 LOCATION
─────────────────────────────────────────────────────────────────────────────
  Linux/Mac:  scripts/create_branch_from_mods.sh
  Windows:    scripts/create_branch_from_mods.ps1

🎯 PURPOSE
─────────────────────────────────────────────────────────────────────────────
  ✓ Checks if mods were generated
  ✓ Only creates branch if mods exist
  ✓ Prevents accidental master commits

⚡ QUICK COMMANDS
─────────────────────────────────────────────────────────────────────────────

LINUX/MAC:
  
  bash scripts/create_branch_from_mods.sh feature/my-posters

WINDOWS:
  
  powershell -ExecutionPolicy Bypass -File scripts/create_branch_from_mods.ps1 "feature/my-posters"

📋 COMPLETE WORKFLOW
─────────────────────────────────────────────────────────────────────────────

1. Add media:
   cp my-images/*.jpg input/

2. Generate mods:
   bash generate_mods.sh

3. Create branch (SAFETY CHECK):
   bash scripts/create_branch_from_mods.sh feature/my-posters

4. Commit:
   git add .
   git commit -m "feat: add new poster packs"

5. Push:
   git push origin feature/my-posters

6. Auto-PR created! ✅

✅ SAFETY CHECKS THE SCRIPT PERFORMS
─────────────────────────────────────────────────────────────────────────────

✓ Counts .zip files in ./build/
✓ Counts mod folders in ./mods/
✓ Only creates branch if at least 1 found
✓ Warns if not on master
✓ Handles existing branches
✓ Shows user-friendly prompts

❌ PREVENTS THESE MISTAKES
─────────────────────────────────────────────────────────────────────────────

❌ Creating branches without mods
❌ Empty commits on master
❌ Pushing incomplete work
❌ Wrong branch creation

📚 FULL DOCUMENTATION
─────────────────────────────────────────────────────────────────────────────

  See: docs/BRANCH_CREATION_GUIDE.md

  Contains:
  - Detailed usage examples
  - Integration with workflows
  - Troubleshooting guide
  - Common scenarios
  - Best practices

🔧 PARAMETERS (Optional)
─────────────────────────────────────────────────────────────────────────────

  [branch_prefix]  Name of branch to create
                   Default: "feature/new-mods"
                   
  Example:
    bash scripts/create_branch_from_mods.sh feature/landscape-photos

⚠️  IF NO MODS FOUND
─────────────────────────────────────────────────────────────────────────────

Script refuses to create branch and shows:

  ✗ No mod packs found!
  Before creating a branch, you need to:
    1. Add media files to ./input/
    2. Run the generator: bash generate_mods.sh
    3. Check that .zip files appear in ./build/
    4. Then run this script again

→ Go back to step 2 above ↻

🎯 SUCCESS OUTPUT
─────────────────────────────────────────────────────────────────────────────

When successful, you'll see:

  ✓ Found mod packs!
    - 2 archive(s)
    - 2 folder(s)
  ✓ Created and switched to branch: feature/my-posters
  
  Next steps:
    1. Review your mods in: ./mods/
    2. Test the .zip files from: ./build/
    3. Commit: git add . && git commit -m 'feat: add new poster packs'
    4. Push: git push origin feature/my-posters

💡 TIPS
─────────────────────────────────────────────────────────────────────────────

• Use descriptive branch names: feature/desert-photos-2025
• Run from project root directory (where generate_mods.sh is)
• Test .zip files locally before pushing
• The auto-PR workflow creates PR automatically
• Commit often with meaningful messages

🆘 TROUBLESHOOTING
─────────────────────────────────────────────────────────────────────────────

Problem: "Command not found" (bash)
→ Solution: bash scripts/create_branch_from_mods.sh

Problem: ExecutionPolicy (PowerShell)
→ Solution: Add -ExecutionPolicy Bypass flag

Problem: "Branch already exists"
→ Solution: Use different name or switch to existing: git checkout feature/name

Problem: "No mod packs found"
→ Solution: Run generator first: bash generate_mods.sh

═════════════════════════════════════════════════════════════════════════════

For full details, see: docs/BRANCH_CREATION_GUIDE.md

EOF
