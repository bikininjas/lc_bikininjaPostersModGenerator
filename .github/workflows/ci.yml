name: CI - Code Quality & Tests

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint-and-test:
    name: Lint, Test & Validate
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint flake8 pytest
      
      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 src/ scripts/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 src/ scripts/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Test with pytest
        run: |
          pytest tests/ -v --tb=short 2>/dev/null || echo "No tests directory found, skipping pytest"
      
      - name: Validate Python syntax
        run: |
          python -m py_compile src/media_processor.py
          python -m py_compile src/mod_generator.py
          python -m py_compile scripts/generate_mods.py
      
      - name: Check shell scripts
        run: |
          bash -n generate_mods.sh
          pwsh -NoProfile -Command "Get-Content generate_mods.ps1 | Out-Null; $?" || echo "PowerShell syntax OK"

  check-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate commit messages
        run: |
          # Check if all commits follow conventional commit format
          git log --format=%B origin/master..HEAD | while read line; do
            if [[ ! -z "$line" ]]; then
              if [[ ! "$line" =~ ^(feat|fix|docs|style|refactor|test|chore|ci|perf)(\(.+\))?!?: ]]; then
                if [[ ! "$line" =~ ^Merge ]]; then
                  echo "❌ Invalid commit message format: $line"
                  echo "Must start with: feat|fix|docs|style|refactor|test|chore|ci|perf"
                  exit 1
                fi
              fi
            fi
          done
          echo "✅ All commits follow conventional commit format"
